.box{
	position: absolute;
	top:35%;
	left:20%;
	/* 使用flex布局使内部元素居中 */
	display: flex;
	justify-content: center;
	align-items: center;
	min-height: 100vh;
	background: transparent;	
}
	button {
		cursor:pointer;
	}
	     body {
	font-family: '华文新魏', "Comic Sans MS",sans-serif;
	margin: 0;
	adding: 0;
	background-image: url(image/background01.png); /* 背景图片 */
	background-size: cover; /* 覆盖整个页面 */
	background-attachment: relative; /* 背景图片随滚动条滚动 */
 	background-repeat: no-repeat;
        }
	.hidden {
    display: none;
}
	.section {
	margin: 8% 16% 8% 0%; /*正文部分靠左一点，右边留出位置给小图标*/
	padding: 20px;
	position:relative;
	top:20%;
	left:0%;
	height:1800px;/*干脆让高度自适应？好像不行 那就多给点*/
	background: rgba(255, 255, 255, 0.7);
	text-align: center;
	backdrop-filter: blur(3px);/*使后面的所有元素模糊*/
        }
	.image-gallery {
    display: flex;
    justify-content: center;
    align-items: center;/*居中对齐弹性盒的各项元素*/
    flex-wrap: wrap;
    height: auto;
	-webkit-display: flex; /* Safari */
    -webkit-align-items: center;
  }
  .image-column {
    display: flex;/*这里不确定要不要加 那还是加吧 反正也不费事（doge*/
    flex-direction: column;/*竖排~好爱 我本来以为很麻烦的 没想到CSS3一下就成*/
    margin: 5px;
  }
  .image-column img {
	width:60px;
	height:auto;
    margin-bottom: 40px;
    transition: transform 0.3s ease;
	cursor:url("image/樱花cur格式.cur"),auto;
  }
	/*因为后来改主意用转换图片了，这段伪元素就没有用了，于是我决定！加载到按钮上（对，我就是想玩花的，能试试就玩玩
  .image-column img:hover,
  .image-column img:focus {
    transform: scale(1.1);
  }*/
  .lefttext {/*和righttext重复了90%，可以加个class改下面的HTML解决，但是……懒 就这么麻烦着吧*/
    visibility: hidden;
	white-space: pre-line;
    position: absolute;
    right:100%;/*完美的贴近 亏我一开始还在傻傻的调left……*/
	width:510%;
	height:100%;
    top:0px;
    border: 5px solid #E7B0E4;
	border-radius: 30px;
    padding: 5px;
    z-index: 1;
	text-indent: 2;
	text-align:left;
	font-size:large;
  }
 .righttext {
    visibility: hidden;
	white-space: pre-line;
    position: absolute;
    left:100%;
	width:620%;
	height:100%;
    top:0px;
    border: 5px solid #E7B0E4;
	border-radius: 30px;
    padding: 5px;
    z-index: 1;
	text-indent: 2;
	text-align:left;
	font-size:large;
  }
  /*.image-column img:hover + .lefttext {
    visibility: visible;
  }写函数写了半天 忽然想起来可以用相邻兄弟选择器解决 泪流满面 虽然总感觉没有函数保险（错觉 不对 好像是不行，那就好哈哈哈哈 没有白写*/
	.downimg{/*小剧场图标哩*/
		position:fixed;
		top:70px;
		left:88%;
		width:15%;
		height:auto;
		margin-top:0px;
		padding-top:0px;
		filter:grayscale(70%);}
	.downimg:hover,
	.downimg:active{
		filter:brightness(120%);
	}
	#backgroundImg{
		width: 100%; 
		border-width: 0px; 
		background-color: rgba(207,177,244,0.80); 
		font-size: 17px; 
		height: 100%;
		font-family: STXinwei;
		cursor:pointer;
	}
	#coating{
    box-sizing: border-box;/*遮罩层*/
    margin: 0;
    padding: 0;
    position: fixed;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
    background-color: rgba(168,99,195,0);
    display:none;
	z-index:900;
	}
	#popup {
		margin:auto;/*弹窗*/
		align-self: center;
		font-size:xxx-large;
		display: block;
		padding:20px;
		background-color:rgba(207,177,244,0.70);
		color:rgba(255,255,255,0.90);
		width:auto;
		height:auto;
		z-index:988;
		border-radius: 20px;
	}
	@keyframes emerge {
		from{opacity: 0;}
		to{opacity:0.8;}
	}
.loader{
	/* 设置loader的尺寸 */
	position:relative;
	width:250px;
	height:250px;
	background: transparent;
	/* 使用滤镜特效fluid实现模糊效果 */
	filter: url(#fluid);/*连到svg那里的*/
}
svg{
	width: 0;
	height:0;
}
.loader span{
	/* 将每个span元素绝对定位到loader容器的左上角 */
	position:absolute;
	left:0;
	top:0;
	width:100%;
	height:100%;
}

*{
	/* 重置所有元素的边距和内边距 */
	margin: 0;
	padding: 0;
	box-sizing: border-box;
}

.loader span::before{
	/* 为每个span元素添加一个圆形珠子 */
	content: "";
	position: absolute;
	top: 0;
	width: 40px;
	height: 40px;
	background: linear-gradient(to right, #eaafc8, #654ea0);
	border-radius: 50%;/*圆形的关键要素*/
	filter:brightness(120%);/*浅调一下亮色*/
	-webkit-box-shadow: 0 0 30px #F1CCDC;
	box-shadow: 0 0 30px #F1CCDC;
}

@keyframes animate {
	/* 使珠子旋转360度 */
	from{transform: rotate(0deg);}
	to{transform: rotate(360deg);}
}
.loader span{
	/* 使用calc函数将每个静止的珠子根据变量i旋转一定角度 */
	transform:rotate(calc(45deg*var(--i)));
}

.rotate{
	/* 将带有rotate类的珠子应用动画效果 */
	animation:animate 3s ease-in-out infinite calc(-0.1s*var(--j)) paused;
	/*animation-delay用calc呈现珠子依次出发的效果*/
}
.box::before{
	content:"给看官表演个魔术~快把鼠标放进来~";
	font-size:x-large;
	display:inline-block;
	position: absolute;
	right:100%;
	background-image: linear-gradient(to right, #eaafc8, #654ea3);/*本来想直接用动画弄渐变色的 但是还是改成了用背景实现*/
	color:transparent;
	background-clip: text;/*背景剪裁，文字透明，就可以直接渐变文字啦完美*/
	-webkit-background-clip:text;/*加一道保险 safari、chrome*/
}